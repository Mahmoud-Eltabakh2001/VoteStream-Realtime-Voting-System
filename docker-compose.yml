version: '2'
services:
  ed-pyspark-jupyter:
    image: easewithdata/pyspark-jupyter-lab
    user: root
    container_name: ed-pyspark-jupyter-lab
    ports:
      - 8888:8888
      - 4040:4040
    environment:
      JUPYTER_PORT: 8888
      SPARK_UI_PORT: 4040
      GRANT_SUDO: yes
    volumes:
      - streaming_data:/data:rw
      - ./jars:/opt/spark/jars:rw

  ed-zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: ed-zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  ed-kafka:
    image: confluentinc/cp-kafka:7.4.3
    container_name: ed-kafka
    depends_on:
      - ed-zookeeper
    ports:
      - 9092:9092
    volumes:
      - streaming_data:/data:rw
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ed-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ed-kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "raw:1:1,voters_topic:1:1,candidates_topic:1:1,votes_topic:1:1"

  ed-postgres:
    image: postgres:15
    container_name: ed-postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: voting_db
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.3
    container_name: control-center
    depends_on:
      - ed-kafka
      - ed-zookeeper
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: ed-kafka:29092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: ed-zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  voting-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voting-app
    depends_on:
      ed-postgres:
        condition: service_healthy
      ed-kafka:
        condition: service_started
    environment:
      - DB_HOST=ed-postgres
      - DB_NAME=voting_db
      - DB_USER=postgres
      - DB_PASS=postgres
      - KAFKA_BROKER=ed-kafka:29092
    restart: on-failure
    volumes:
      - ./app:/app

volumes:
  streaming_data:
  pg_data:
